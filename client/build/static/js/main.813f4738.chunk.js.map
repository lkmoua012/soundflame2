{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getDataFromDb","fetch","then","data","json","res","setState","putDataToDb","message","currentIds","state","map","id","idToBeAdded","includes","axios","post","deleteFromDB","idTodelete","objIdToDelete","forEach","dat","_id","delete","updateDB","idToUpdate","updateToApply","objIdToUpdate","update","callApi","asyncToGenerator","regenerator_default","a","mark","_callee","response","body","wrap","_context","prev","next","sent","status","Error","abrupt","stop","handleSubmit","_ref2","_callee2","e","jBody","_context2","preventDefault","method","headers","Content-Type","JSON","stringify","term","searchTerm","type","searchType","text","clearResults","parse","responseToPost","result1artist","artist1","result1album","album1","result1songTitle","songTitle1","result1previewLink","previewLink1","result1thirty","thirty1","result1albumImg","albumImg1","result2artist","artist2","result2album","album2","result2songTitle","songTitle2","result2previewLink","previewLink2","result2thirty","thirty2","result2albumImg","albumImg2","result3artist","artist3","result3album","album3","result3songTitle","songTitle3","result3previewLink","previewLink3","result3thirty","thirty3","result3albumImg","albumImg3","console","log","exp1","result1exp","exp2","result2exp","exp3","result3exp","_x","apply","arguments","handleInputChange","event","_event$target","target","name","value","defineProperty","intervalIsSet","idToDelete","objectToUpdate","_this2","express","catch","err","interval","setInterval","clearInterval","_this3","react_default","createElement","reactstrap_es","class","for","onChange","placeholder","onClick","color","size","sm","top","width","src","alt","style","height","ReactPlayer_default","className","url","controls","length","padding","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.813f4738.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Container,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n  Row,\n  Col,\n  Jumbotron,\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle\n} from 'reactstrap';\nimport axios from 'axios';\n\nimport ReactPlayer from 'react-player';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      data: [],\n      id: 0,\n      message: null,\n      intervalIsSet: false,\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null,\n\n      searchTerm: \"Thriller\",\n      searchType: \"track\",\n      response: '',\n      post: '',\n      responseToPost: '',\n\n      result1artist: '',\n      result1album: '',\n      result1songTitle: '',\n      result1previewLink: '',\n      result1thirty: '',\n      result1exp: '',\n\n      result2artist: '',\n      result2album: '',\n      result2songTitle: '',\n      result2previewLink: '',\n      result2thirty: '',\n      result2exp: '',\n\n      result3artist: '',\n      result3album: '',\n      result3songTitle: '',\n      result3previewLink: '',\n      result3thirty: '',\n      result3exp: ''\n\n    };\n  };\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err));\n    this.getDataFromDb();\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n    }\n  };\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n    }\n  };\n\n  getDataFromDb = () => {\n    fetch(\"/api/getData\")\n      .then(data => data.json())\n      .then(res => this.setState({ data: res.data }));\n  };\n\n  putDataToDb = message => {\n    let currentIds = this.state.data.map(data => data.id);\n    let idToBeAdded = 0;\n    while (currentIds.includes(idToBeAdded)) {\n      ++idToBeAdded;\n    }\n\n    axios.post(\"/api/putData\", {\n      id: idToBeAdded,\n      message: message\n    });\n  };\n\n  deleteFromDB = idTodelete => {\n    let objIdToDelete = null;\n    this.state.data.forEach(dat => {\n      if (dat.id === idTodelete) {\n        objIdToDelete = dat._id;\n      }\n    });\n\n    axios.delete(\"/api/deleteData\", {\n      data: {\n        id: objIdToDelete\n      }\n    });\n  };\n\n  updateDB = (idToUpdate, updateToApply) => {\n    let objIdToUpdate = null;\n    this.state.data.forEach(dat => {\n      if (dat.id === idToUpdate) {\n        objIdToUpdate = dat._id;\n      }\n    });\n\n    axios.post(\"/api/updateData\", {\n      id: objIdToUpdate,\n      update: { message: updateToApply }\n    });\n  };\n\n  callApi = async () => {\n    const response = await fetch('/api/hello');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n\n    const response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        term: this.state.searchTerm,\n        type: this.state.searchType\n      }),\n    });\n\n    const body = await response.text();\n\n    if (body === \"null\") {\n      this.clearResults();\n    } else {\n      var jBody = JSON.parse(body);\n\n      this.setState({ responseToPost: body });\n\n      this.setState({ result1artist: jBody.artist1 });\n      this.setState({ result1album: jBody.album1 });\n      this.setState({ result1songTitle: jBody.songTitle1 });\n      this.setState({ result1previewLink: jBody.previewLink1 });\n      this.setState({ result1thirty: jBody.thirty1 });\n      this.setState({ result1albumImg: jBody.albumImg1 });\n\n      this.setState({ result2artist: jBody.artist2 });\n      this.setState({ result2album: jBody.album2 });\n      this.setState({ result2songTitle: jBody.songTitle2 });\n      this.setState({ result2previewLink: jBody.previewLink2 });\n      this.setState({ result2thirty: jBody.thirty2 });\n      this.setState({ result2albumImg: jBody.albumImg2 });\n\n      this.setState({ result3artist: jBody.artist3 });\n      this.setState({ result3album: jBody.album3 });\n      this.setState({ result3songTitle: jBody.songTitle3 });\n      this.setState({ result3previewLink: jBody.previewLink3 });\n      this.setState({ result3thirty: jBody.thirty3 });\n      this.setState({ result3albumImg: jBody.albumImg3 });\n\n      console.log(jBody.exp1);\n      console.log(this.state.result1exp);\n\n      if (jBody.exp1 === \"true\") {\n        this.setState({ result1exp: '(Explicit)' });\n      };\n\n      if (jBody.exp2 === \"true\") {\n        this.setState({ result2exp: '(Explicit)' });\n      };\n\n      if (jBody.exp3 === \"true\") {\n        this.setState({ result3exp: '(Explicit)' });\n      };\n\n    }\n  };\n\n  clearResults() {\n    this.setState({ result1artist: \"Unfortunately, a preview for this song is unavailable.\" });\n    this.setState({ result1album: '' });\n    this.setState({ result1songTitle: '' });\n    this.setState({ result1previewLink: '' });\n    this.setState({ result1thirty: '' });\n    this.setState({ result1albumImg: '' });\n\n    this.setState({ result2artist: '' })\n    this.setState({ result2album: '' });\n    this.setState({ result2songTitle: '' });\n    this.setState({ result2previewLink: '' });\n    this.setState({ result2thirty: '' });\n    this.setState({ result2albumImg: '' });\n\n    this.setState({ result3artist: '' })\n    this.setState({ result3album: '' });\n    this.setState({ result3songTitle: '' });\n    this.setState({ result3previewLink: '' });\n    this.setState({ result3thirty: '' });\n    this.setState({ result3albumImg: '' });\n\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render() {\n    const { data } = this.state;\n    return (\n      <Container>\n        <Jumbotron>\n          <h2>Welcome to Soundflame <i class=\"fas fa-music\"></i> <i class=\"fas fa-fire\"></i></h2>\n        </Jumbotron>\n        <Form>\n          <FormGroup>\n            <Label for=\"searchTerm\">Search</Label>\n            <Input\n              value={this.state.searchTerm}\n              onChange={this.handleInputChange}\n              type=\"search\"\n              name=\"searchTerm\"\n              id=\"searchTerm\"\n              placeholder=\"Enter your search term.\" />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"searchType\">Filter</Label>\n            <Input\n              value={this.state.searchType}\n              onChange={this.handleInputChange}\n              type=\"select\"\n              name=\"searchType\"\n              id=\"searchType\"\n            >\n              <option value=\"track\">track</option>\n              <option value=\"artist\">artist</option>\n              <option value=\"album\">album</option>\n            </Input>\n          </FormGroup>\n        </Form>\n        <Button\n          onClick={this.handleSubmit}\n          color=\"primary\"\n          size=\"lg\">Submit</Button>\n\n        <Container>\n          <h3>Results</h3>\n\n          <Row>\n            <Col sm=\"4\">\n              <Card>\n                <CardImg top width=\"75%\" src={this.state.result1albumImg} alt='' style={{ height: 300 }} />\n                <CardBody>\n                  <CardTitle>{this.state.result1songTitle}{this.state.result1exp}</CardTitle>\n                  <CardSubtitle>\n                    {this.state.result1artist}\n                    <br />\n                    {this.state.result1album}\n                  </CardSubtitle>\n                  <CardText>\n                    {this.state.result1previewLink}\n                    <ReactPlayer\n                      className='react-player'\n                      url={this.state.result1thirty}\n                      width='100%'\n                      height='50px'\n                      controls />\n                  </CardText>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col sm=\"4\">\n              <Card>\n                <CardImg top width=\"75%\" src={this.state.result2albumImg} alt='' style={{ height: 300 }} />\n                <CardBody>\n                  <CardTitle>{this.state.result2songTitle}{this.state.result2exp}</CardTitle>\n                  <CardSubtitle>\n                    {this.state.result2artist}\n                    <br />\n                    {this.state.result2album}\n                  </CardSubtitle>\n                  <CardText>\n                    {this.state.result2previewLink}\n                    <ReactPlayer\n                      className='react-player'\n                      url={this.state.result2thirty}\n                      width='100%'\n                      height='50px'\n                      controls />\n                  </CardText>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col sm=\"4\">\n              <Card>\n                <CardImg top width=\"75%\" src={this.state.result3albumImg} alt='' style={{ height: 300 }} />\n                <CardBody>\n                  <CardTitle>{this.state.result3songTitle}{this.state.result3exp}</CardTitle>\n                  <CardSubtitle>\n                    {this.state.result3artist}\n                    <br />\n                    {this.state.result3album}\n                  </CardSubtitle>\n                  <CardText>\n                    {this.state.result3previewLink}\n                    <ReactPlayer\n                      className='react-player'\n                      url={this.state.result3thirty}\n                      width='100%'\n                      height='50px'\n                      controls />\n                  </CardText>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n\n        <div>\n          <h3>Saved Songs</h3>\n          <ul>\n            {data.length <= 0\n              ? \"No songs yet saved.\"\n              : data.map(dat => (\n                <li style={{ padding: \"10px\" }} key={data.message}>\n                  <span style={{ color: \"gray\" }}> id: </span> {dat.id} <br />\n                  <span style={{ color: \"gray\" }}> data: </span>\n                  {dat.message}\n                </li>\n              ))}\n          </ul>\n          <div style={{ padding: \"10px\" }}>\n            <button onClick={() => this.putDataToDb(\n              \"\\nSong: \" + this.state.result1songTitle +\n              \" ---\\nArtist: \" + this.state.result1artist +\n              \" ---\\nAlbum: \" + this.state.result1album)}>\n              SAVE 1\n          </button>\n          <button onClick={() => this.putDataToDb(\n              \"\\nSong: \" + this.state.result2songTitle +\n              \" ---\\nArtist: \" + this.state.result2artist +\n              \" ---\\nAlbum: \" + this.state.result2album)}>\n              SAVE 2\n          </button>\n          <button onClick={() => this.putDataToDb(\n              \"\\nSong: \" + this.state.result3songTitle +\n              \" ---\\nArtist: \" + this.state.result3artist +\n              \" ---\\nAlbum: \" + this.state.result3album)}>\n              SAVE 3\n          </button>\n          </div>\n          <div style={{ padding: \"10px\" }}>\n            <input\n              type=\"text\"\n              style={{ width: \"200px\" }}\n              onChange={e => this.setState({ idToDelete: e.target.value })}\n              placeholder=\"put id of item to delete here\"\n            />\n            <button onClick={() => this.deleteFromDB(this.state.idToDelete)}>\n              DELETE\n          </button>\n          </div>\n        </div>\n\n      </Container>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}